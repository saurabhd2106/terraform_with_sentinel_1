variables:
- group: state-data
- group: config-data
- name: service-connection
  value: 'terraform-cloud'

trigger:
  branches:
    exclude:
      - main

stages:
- stage: validate
  displayName: Validation
  condition: eq(variables['Build.Reason'], 'PullRequest')
  jobs:
  - job: Validate
    displayName: Validate Terraform
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'
    - pwsh: terraform fmt -check
      displayName: Terraform Format Check
    - pwsh: terraform init -backend=false
      displayName: Terraform Init
    - pwsh: terraform validate
      displayName: Terraform Validate

- stage: Plan
  displayName: Plan
  condition: eq(variables['Build.Reason'], 'PullRequest')
  jobs:
  - job: Plan
    pool:
      vmImage: ubuntu-latest
    steps:

    - task: AzureCLI@2
      displayName: Extract App Config as File
      inputs:
        azureSubscription: $(service-connection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az appconfig kv export --auth-mode login --endpoint $(app-config-endpoint) --destination file --format json --path $(System.DefaultWorkingDirectory)/terraform.tfvars.json --resolve-keyvault true --yes
        addSpnToEnvironment: true

    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTaskV4@4
      displayName: Terraform Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: $(service-connection)
        backendAzureRmResourceGroupName: '${BACKEND_RESOURCE_GROUP_NAME}'
        backendAzureRmStorageAccountName: '${BACKEND_AZURE_STORAGE_ACCOUNT_NAME}'
        backendAzureRmContainerName: '${BACKEND_AZURE_STORAGE_CONTAINER_NAME}'
        backendAzureRmKey: '${BACKEDN_AZURE_STORAGE_ACCOUNT_KEY_NAME}'
      env:
        ARM_USE_AZUREAD: true
        ARM_USE_OIDC: true
        TF_IN_AUTOMATION: true
        TF_INPUT: 0
        TF_LOG: INFO
    
    - task: TerraformTaskV4@4
      displayName: Terraform plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        commandOptions: -out=$(System.DefaultWorkingDirectory)/deploy.tfplan
        environmentServiceNameAzureRM: $(service-connection)
      env:
        ARM_USE_AZUREAD: true
        ARM_USE_OIDC: true
        TF_IN_AUTOMATION: true
        TF_INPUT: 0
        TF_LOG: INFO

    - task: PublishPipelineArtifact@1
      displayName: Publish Plan File as an artifact
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/deploy.tfplan'
        artifactName: PlanFile
        publishLocation: 'pipeline'